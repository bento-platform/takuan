name: Generate OpenAPI spec

on:
  release:
    types:
      - published

permissions:
  contents: write
  repository-projects: write

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install Poetry
      run: python -m pip install poetry
    - name: Install dependencies
      run: poetry install
    - name: Export OpenAPI schema
      run: python ./transcriptomics_data_service/export-openapi.py
    - name: Upload OpenAPI release artifact
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require("fs");
          
          // get tag
          const tag = context.ref.replace("refs/tags/", "");
          
          // get release from tag
          const release = await github.rest.repos.getReleaseByTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: tag,
          });

          await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.data.id,
            name: "openapi.json",
            data: await fs.readFileSync("./openapi.json"),
          });
