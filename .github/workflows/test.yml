name: Test

on:
  push:
    branches:
      - main
  pull_request:

env:
  DB_HOST: localhost
  DB_PORT: 5432
  DB_USER: postgres
  DB_NAME: postgres
  DB_PASSWORD: postgres

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12", "3.13" ]
    services:
      postgres:
        image: postgres:18
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - name: Tweak Postgres
        run: |
          docker exec ${{ job.services.postgres.id }} sh -c 'echo "max_connections=200" >> /var/lib/postgresql/18/docker/postgresql.conf'
          docker kill --signal=SIGHUP ${{ job.services.postgres.id }}
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        name: Set up Python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Setup authz plugin
        run: |
          mkdir lib
          cp authz_plugins/api_key/authz.module.py lib/
          cp authz_plugins/api_key/example.env lib/.env
      - name: Test
        run: |
          poetry run pytest -svv --cov=transcriptomics_data_service --cov-branch --cov-report xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
